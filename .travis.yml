sudo: required

language: go

go:
  - "1.12.9"

env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - K8S_VERSION="v1.10.0"
    - MINIKUBE_VERSION="v0.28.2"
    - IMAGE_NAME=storageos/cluster-operator
    - IMAGE_TAG=test
    - CI_CONTAINER_REGISTRY=stosci
    - CONTAINER_REPO_NAME=cluster-operator

before_install:
  - |
      if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep -qvE '(\.md)|(\.MD)|(\.png)|(\.pdf)|^(doc/)|^(MAINTAINERS)|^(LICENSE)'; then
        # Do not skip if it's a tagged build.
        if [[ -z "$TRAVIS_TAG" ]]; then
          echo "Only doc files were updated, not running the CI."
          exit
        fi
      fi
  - sudo apt -y update && sudo apt install -y jq
  - curl -Lo yq https://github.com/mikefarah/yq/releases/download/2.3.0/yq_linux_amd64 && chmod +x yq && sudo mv yq /usr/local/bin/
  - curl -Lo storageos https://github.com/storageos/go-cli/releases/download/1.0.0/storageos_linux_amd64 && chmod +x storageos && sudo mv storageos /usr/local/bin/
#  - docker run -d -p 2399:2399 quay.io/coreos/etcd:v3.3.10 /usr/local/bin/etcd -advertise-client-urls http://0.0.0.0:2399 -listen-client-urls http://0.0.0.0:2399

# Skip downloading deps.
install: true

jobs:
  include:
    - stage: build
      go: "1.12.9"
      name: Build container image
      script:
        - make image/cluster-operator OPERATOR_IMAGE=$CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID
        - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
        - docker push $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID
    - stage: test
      go: "1.12.9"
      sudo: required
      env:
        - "TEST_CLUSTER=kind"
        - "INSTALL_METHOD=olm"
      name: OLM on KinD (k8s-1.13)
      script:
        - docker pull $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID
        - docker tag $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID $IMAGE_NAME:$IMAGE_TAG
        - ./test/e2e.sh $TEST_CLUSTER $INSTALL_METHOD
    - stage: test
      go: "1.12.9"
      sudo: required
      env:
        - "TEST_CLUSTER=openshift"
        - "INSTALL_METHOD=olm"
      name: OLM on OpenShift (k8s-1.11)
      script:
        - docker pull $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID
        - docker tag $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID $IMAGE_NAME:$IMAGE_TAG
        - ./test/e2e.sh $TEST_CLUSTER $INSTALL_METHOD
    - &base-test
      stage: test
      go: "1.12.9"
      sudo: required
      env:
        - "TEST_CLUSTER=openshift"
        - "INSTALL_METHOD=none"
      name: OpenShift-3.11 (k8s-1.11)
      script:
        - docker pull $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID
        - docker tag $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID $IMAGE_NAME:$IMAGE_TAG
        - ./test/e2e.sh $TEST_CLUSTER $INSTALL_METHOD
    - <<: *base-test
      env:
        - "TEST_CLUSTER=kind"
        - "INSTALL_METHOD=none"
      name: KinD (k8s-1.14)
    - stage: deploy
      go: "1.12.9"
      sudo: required
      env:
        - "TEST_CLUSTER=kind"
        - "INSTALL_METHOD=none"
      name: Publish Container Image
      script:
        # Pull the container from CI container registry and retag it.
        - docker pull $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID
        - docker tag $CI_CONTAINER_REGISTRY/$CONTAINER_REPO_NAME:$TRAVIS_BUILD_ID $IMAGE_NAME:$IMAGE_TAG
        # Generate OLM metadata zip for rhel operator marketplace.
        - make metadata-zip
        # Generate uber manifest file.
        - OPERATOR_IMAGE=storageos/cluster-operator:$TRAVIS_TAG make generate-install-manifest
      before_deploy:
        - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
      deploy:
        - provider: script
          script: bash scripts/deploy.sh tagged
          on:
            tags: true
        - provider: releases
          api_key:
            secure: mVr6wWr4Tym729atwxNDDI64PjRdocWUMEb4gOM3gOJUo1BjdJ8D0UzzZJvctW8VdDe1SVZGgpLmFGNOBjP9APBjpTl1ZfQvhJ67urlIn3DCoxjFGTB+2+FM0PVV1FX8hQawy/uTtLHOY+4jrVqm2Av2t486613u++/CNkTZeZCW4ydv/lSOCZ3nieX9eCk13/E6bhrHSQxRFD5KgL5ji+5rzuBlJQ12uzEitxRSBRnBPXU19ZPjFOoR2vbxTzI64BfvhQJSzbdNQbwwPFkmZsYuEUHyu3+ZH8N+Rng/wBL4ejt/gOXIfcHjZ5iGPIhJ3lIaVaxI9L6hHsFh3/QI24arI36Wf31XwPav7m6B4irGNBgbJRr2hS0LbPj0nsguzp/yD4vvpKUwlUtib8PwCxen5snZAQFdNB35Y7K+rdY/xkzFPVXktGZuNd9qSiVzs+kwFFzL2qDVgS5Nap7gYpUEY8Rt0urNklwbvPVdO825an8Y/2f1aXG3yT2jVoLi8z+ON1NDjXAEGJAQp9fVA25iCiW/Bbs7LY0O3EvjudUDPHv+70Lb0etpeqmJVJHavMNqC6cTaVkQ76iEzr0SACwBjAXnJBSkaeh+7KDMZJQ85iGJWPz+p4GyJGXxdLej4TGWS/YO6K5p/eNi5cK2Lbx5iSvSrTyndOFymbsLa+Q=
          file:
            - build/_output/storageos-olm-metadata.zip
            - storageos-operator.yaml
          skip_cleanup: true
          on:
            tags: true
        - provider: script
          script: bash scripts/deploy.sh develop
          on:
            branch: master
